 def dfs(i, j): 
 if i < 0 or i >= row or j < 0 or j >= col or grid[i][j] == 0 or visited[i][j]: 
 return 
 visited[i][j] = True 
 grid[i][j] = num 
 dfs(i - 1, j) 
 dfs(i + 1, j) 
 dfs(i, j - 1) 
 dfs(i, j + 1) 
   if not grid or len(grid[0]) == 0: 
 return 
   row, col = len(grid), len(grid[0]) 
 visited = [[False for i in range(col)] for j in range(row)] 
 num = 0 
 for r in range(row): 
 for c in range(col): 
 if grid[r][c] != 0 and not visited[r][c]: 
 num += 1 
 dfs(r, c) 
   return grid 
   m = [] 
 with open('E/input_question_4.txt') as file: 
 for line in file: 
 line = line.strip() 
 line = line.split('\t') 
 num_line = [int(i) for i in line] 
 m.append(num_line) 
 grid = m 
 f = open('E/output_question_4.txt','w') 
 print(grid,file = f) 
 print(solution(grid),file = f) 
 f.close() 
